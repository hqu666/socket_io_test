アカウント ID:	388501962755 
アカウント名:	hiroshima_app 
パスワード:		CS03tuamasu
E メール: 		hiroshima_app@coresoft-net.co.jp


white-board		
インスタンス ID			i-084e0eab0d1f70959
Elastic IP				52.197.173.40
パブリック DNS (IPv4)	ec2-52-197-173-40.ap-northeast-1.compute.amazonaws.com
プライベート IP			172.31.42.194		
IPv4 パブリック IP		13.230.221.2			<<13.115.171.185
						26:ff:c5:4e:46:b9:01:23:44:7c:cf:58:b5:d5:37:a7:6e:bc:4a:86
						cs-white-board
参考		https://qiita.com/oishihiroaki/items/bc663eb1282d87c46e97

EC２をSSHで操作
PowerShellなどで
①pem保存フォルダに移動
	cd C:\work\web
②設定ファイルの権限設定
		cacls cs-white-board.pem /g hkuwayama:F						//mac;	$ chmod 400 cs-white-board.pem	(777で全権)
③	でログイン
	ssh -i "cs-white-board.pem" ec2-user@52.197.173.40			//mac;	$ ssh -i "cs-white-board.pem"
④作業フォルダに移動
	$ cd wb
⑤該当スクリプト起動
	index.js  public
	成功したら
	EC2>>> ec2-52-197-173-40.ap-northeast-1.compute.amazonaws.com:3080	
	と表示される
⑥webを2画面（もしくは別のPCで）開いて
	ec2-52-197-173-40.ap-northeast-1.compute.amazonaws.com:3080


	
web管理	
FileZillaで操作


④	sudo service httpd start
⑤	sudo vi /var/www/html/index.html		//ページ編集	https://sil.hatenablog.com/entry/aws-ec2-free-webserver
	sudo vi /var/www/html/app.js
⑥ 	$ sudo yum update									//yumのアップデート
⑦	$ sudo yum install git gcc-c++ make openssl-devel	//環境構築に必要なパッケージ
⑧	$ git clone git://github.com/creationix/nvm.git .nvm	//nvmをインストールする
・新規フォルダ作成
			$ mkdir -m 777 wb		

node.jsのインストール
①.nvmの中のシェルスクリプトをrun
	$ source ~/.nvm/nvm.sh		
②インストールできるnodeのバージョンを確認							
	$ nvm ls-remote			//(入手可能なwindows用；4.9.1	6.14.1	8.11.1	10.1.0	)
③任意のバージョンのNodeをインストール
	$ nvm install v8.11.1									//
④確認；インストールできたバージョンを表示
	$ node -v											//指定したバージョンのNodeがインストールされたか確認
⑤nvmのデフォルトバージョンにインストールしたバージョンを指定
	・	$ nvm alias default v6.9.1					//
⑥	$ npm install socket.io							//socket.io　インストール(5.0.0ok)
 
		
socket.io実行環境の構築
①アプリケーションフォルダに移動
	cd C:\work\nodejs\wb		//nodeのインストールフォルダ内
	cd C:\work\web		
	cd C:\work\nodejs						//node.jsインストールフォルダ
	cd /d h:	
	cd H:\develop\xampp\htdocs\wb\wb	

②socket.io　インストール
	npm install --save socket.io	
③express　インストール
	npm install -g express			//-g オプションを付けないと、現在のフォルダ配下のみにインストールされます。
	npm install express-generator -g
	express ?version										（OK;4.9.1）
※socket.io　とexpressインストール
	npm install socket.io express
④

インストール確認	
	node app.js
	
実行開始
①アプリケーションフォルダに移動
	cd C:\work\nodejs\wb		//nodeのインストールフォルダ内
②実行	
	node index.js
③ブラウザで表示させる
	

	ec2-52-197-173-40.ap-northeast-1.compute.amazonaws.com
		http://ec2-13-115-171-185.ap-northeast-1.compute.amazonaws.com/SamplePage.php
	 	http://ec2-55-122-41-31.us-west-2.compute.amazonaws.com/SamplePage.php
 
 
編集要点
①構成
　アプリケーションフォルダ	：	wb
　　　├index.js	
　　　└サブフォルダ		；	public
　　　　　├w_board.js
　　　　　├index.html
　　　　　└style.css
②view（index.html）にトリガー追加
	<div class="button" id="allclear">消去</div>
③スクリプトファイルに
　ⅰ；トリガーからのリスナー追加
		document.getElementById("allclear").onclick = function() {
			allClear();
			socket.emit('allclear',{});					//送信コマンド
		};
　ⅱ：実働部作成
		function allClear() {
			context.clearRect(0, 0,canvas.width,canvas.height);
		}
　ⅲ；レシーバー作成
	 socket.on('allclear', function (data) {
		console.log("recive:all clear");
		allClear();
	});
④起動ファイル(index.js)のfunction onConnection(socket)にsocket.on追加
	function onConnection(socket){
	  socket.on('drawing', (data) => socket.broadcast.emit('drawing', data));
	  socket.on('allclear', (data) => socket.broadcast.emit('allclear', data));				//追記
	}

	sudo viSamplePage.php


SSHインストール
①	cd 'C:\Program Files\OpenSSH-Win64'
②	Get-ExecutionPolicy									現在の設定を確認。
														RemoteSigned　；スクリプトの実行が禁止
③	Set-ExecutionPolicy Unrestricted					実行ポリシーを「制限無し（Unrestricted）」に変更。
	[Y] はい(Y)  [A] すべて続行(A)  [N] いいえ(N)  [L] すべて無視(L)  [S] 中断(S)  [?] ヘルプ (既定値は "N"): L
	
④	.\install-sshd.ps1									インストール

⑤	 .\ssh-keygen.exe -A
ssh-keygen: generating new host keys: RSA Could not save your public key in __PROGRAMDATA__\\ssh/ssh_host_rsa_key.BZVxti2VBG: No such file or directory
ssh-keygen: generating new host keys: DSA Could not save your public key in __PROGRAMDATA__\\ssh/ssh_host_dsa_key.Lp2KGA0XNF: No such file or directory
ssh-keygen: generating new host keys: ECDSA Could not save your public key in __PROGRAMDATA__\\ssh/ssh_host_ecdsa_key.MjjIJ0DJ9a: No such file or directory
ssh-keygen: generating new host keys: ED25519 Could not save your public key in __PROGRAMDATA__\\ssh/ssh_host_ed25519_key.iauB0L9Pne: No such file or directory
PS C:\Program Files\OpenSSH-Win64>


[コントロールパネル] - [Windowsファイアウォール] から、[詳細設定]の[受信の規制] 
　open ssh 64 で追加 

ローカル環境
①	cd C:\work\nodejs						//node.jsインストールフォルダ
	node -v									//インストールされたバージョンの確認
②	npm install --save socket.io							//socket.io　インストール
③	npm install -g express			//-g オプションを付けないと、現在のフォルダ配下のみにインストールされます。
	npm install express-generator -g
	express ?version										（OK;4.9.1）
②	npm install socket.io
	npm install socket.io express
	
	test		node app.js

		cd C:\work\xampp\htdocs\wb					//コンテンツ
	express C:\work\xampp\htdocs\wb					//exampleのひな型が置かれる
	cd C:\work\xampp\htdocs\wb && npm install
		set DEBUG=C:\work\xampp\htdocs\wb & node .\bin\www				//log書き出し開始


		set DEBUG=C:\work\xampp\htdocs\wb & node sio.js				//log書き出し開始


	システム環境変数　で　Path設定

npm install express


参照
http://irukanobox.blogspot.jp/2016/06/socketio.html
10分でできる！Node.jsのSocket.ioを使ったWebSocketによる双方向通信
	http://webcake.no003.info/webdesign/node-js-socket-io.html

https://dev.classmethod.jp/server-side/language/node-socket-io/

https://ics.media/entry/4320

http://kazuki-room.com/how_to_install_socket-io_on_windows/

https://qiita.com/talefantasia/items/50bb4237b95dc46c014d

http://blog.tmyt.jp/entry/2017/01/07/175533

https://teratail.com/questions/52031



